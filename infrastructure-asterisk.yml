AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Infraestructura ECS Fargate completa con VPC, cluster, servicio y task para el proyecto Asterisk + PHP.

Parameters:
  ContainerImage:
    Type: String
    Description: "Imagen Docker para el contenedor (ECR o DockerHub). Ej: '123456789012.dkr.ecr.us-east-1.amazonaws.com/asterisk:latest'"
  
  DesiredCount:
    Type: Number
    Default: 1
    Description: "Cantidad de tareas a correr"
  
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: "CIDR para la VPC"

Resources:

  ##################
  # VPC y Red
  ##################

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: AsteriskVPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AsteriskIGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  SubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  ##################
  # Seguridad
  ##################
  
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permite acceso a puertos SIP y HTTP para ECS Fargate
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: udp
          FromPort: 5060
          ToPort: 5060
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 10000
          ToPort: 10010
          CidrIp: 0.0.0.0/0 
        - IpProtocol: tcp
          FromPort: 8088
          ToPort: 8088
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0

  ##################
  # Roles IAM
  ##################

  ECSExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ##################
  # ECS Cluster, Task y Service
  ##################

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: AsteriskCluster

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: asterisk-task
      Cpu: '512'
      Memory: '1024'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: asterisk-container
          Image: !Ref ContainerImage
          PortMappings:
            - ContainerPort: 5060
              Protocol: udp
            - ContainerPort: 8088
              Protocol: tcp
            - ContainerPort: 10000
              Protocol: udp
            - ContainerPort: 10001
              Protocol: udp
            - ContainerPort: 10002
              Protocol: udp
            - ContainerPort: 10003
              Protocol: udp
            - ContainerPort: 10004
              Protocol: udp
            - ContainerPort: 10005
              Protocol: udp
            - ContainerPort: 10006
              Protocol: udp
            - ContainerPort: 10007
              Protocol: udp
            - ContainerPort: 10008
              Protocol: udp
            - ContainerPort: 10009
              Protocol: udp
            - ContainerPort: 10010
              Protocol: udp
          Essential: true
          EntryPoint:
            - /bin/sh
            - -c
            - /docker-entrypoint.sh
          Environment:
            - Name: ENV_VAR1
              Value: "valor"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: /ecs/asterisk
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: asterisk

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: ECSCluster
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: !Ref DesiredCount
      LaunchType: FARGATE
      TaskDefinition: !Ref ECSTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
          SecurityGroups:
            - !Ref ECSSecurityGroup

  ##################
  # Logs
  ##################

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/asterisk
      RetentionInDays: 30

Outputs:
  ClusterName:
    Description: "Nombre del cluster ECS"
    Value: !Ref ECSCluster

  ServiceName:
    Description: "Nombre del servicio ECS"
    Value: !Ref ECSService

  VpcId:
    Description: "VPC ID"
    Value: !Ref VPC

  SecurityGroupId:
    Description: "Security Group ID"
    Value: !Ref ECSSecurityGroup
